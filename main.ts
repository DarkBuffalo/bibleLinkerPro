/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => BibleLinkerPro
});
module.exports = __toCommonJS(main_exports);

// settings.ts
var import_obsidian = require("obsidian");

// translations.json
var translations_exports = {};
__export(translations_exports, {
  default: () => translations_default,
  en: () => en,
  fr: () => fr,
  nl: () => nl
});
var en = {
  ABOUT: "About",
  CREATED_WITH_LOVE: "Created with \u2764\uFE0F by",
  DOCUMENTATION: "Documentation",
  CHANGELOG: "Changelog",
  LANGUAGE: "Language",
  SYSTEM: "System",
  PROCESSING: "Processing",
  EXPAND_BIBLE_BOOK_NAME: "Expand Bible book name",
  EXPAND_BIBLE_BOOK_NAME_EXAMPLE: "E.g. 'Ge' => 'Genesis'.",
  AUTO_GET_CURRENT_LINE: "Auto get current line",
  AUTO_GET_CURRENT_LINE_DESC: "Automatically get Bible text from current line the cursor is on, if no text is already selected.",
  STYLING: " Styling",
  CAPITALIZE_FIRST_CHARACTER: "Capitalize first character of Bible book link output",
  CAPITALIZE_FIRST_CHARACTER_DESC: "Capitalizes the first character of the link.",
  ADD_SPACE_BIBLE_BOOK_NUMBER_NAME: "Add space between Bible book number and Bible book name",
  ADD_SPACE_BIBLE_BOOK_NUMBER_NAME_DESC: "Adds a space between number and book, e.g. '1 Joh'.",
  RENDER_LINK_OUTPUT_BOLD: "Render the link output bold",
  RENDER_LINK_OUTPUT_BOLD_DESC: "Shows the output link with bold font-weight.",
  RENDER_LINK_OUTPUT_ITALIC: "Render the link output italic",
  RENDER_LINK_OUTPUT_ITALIC_DESC: "Shows the output link with italic font.",
  LINK_PREFIX: "Link prefix",
  LINK_PREFIX_DESC: "Prefix for the link, e.g. '- '.",
  LINK_SUFFIX: "Link suffix",
  LINK_SUFFIX_DESC: "Suffix for the link, e.g. '!!!'.",
  PREFIX_HERE: "Prefix here",
  SUFFIX_HERE: "Suffix here",
  CLEAR_LINK_PREFIX: "Clear link prefix",
  CLEAR_LINK_SUFFIX: "Clear link suffix",
  INVALID_INPUT: "Invalid Bible text input! Before you execute this command you need to select a valid Bible text like: '1 th 1:3-8'.",
  AUTO_OPEN_LINK: "Automatically open generated link",
  AUTO_OPEN_LINK_DESC: "Automatically opens generated links in JW Library."
};
var fr = {
  ABOUT: "A Propos",
  CREATED_WITH_LOVE: "Créer avec \u2764\uFE0F par",
  DOCUMENTATION: "Documentation",
  CHANGELOG: "Changelog",
  LANGUAGE: "Language",
  SYSTEM: "System",
  PROCESSING: "Processing",
  EXPAND_BIBLE_BOOK_NAME: "Expandre le nom des livres de la Bible",
  EXPAND_BIBLE_BOOK_NAME_EXAMPLE: "Ex: 'Ge' => 'Genese'.",
  AUTO_GET_CURRENT_LINE: "Transformation auto de la ligne courante",
  AUTO_GET_CURRENT_LINE_DESC: "Automatiquement transformer la réference biblique de la ligne oû se situe le curseur si aucun texte n'est selectionner.",
  STYLING: " Style",
  CAPITALIZE_FIRST_CHARACTER: "Mettre une majuscule aux livres de la Bible",
  CAPITALIZE_FIRST_CHARACTER_DESC: "Mettre une majuscule aux livres de la Bible.",
  ADD_SPACE_BIBLE_BOOK_NUMBER_NAME: "Ajouter un espace entre le livre et le chapitre",
  ADD_SPACE_BIBLE_BOOK_NUMBER_NAME_DESC: "Ajouter un espace entre le livre et le chapitre, ex. '1 Jean'.",
  RENDER_LINK_OUTPUT_BOLD: "Rendre le lien en gras",
  RENDER_LINK_OUTPUT_BOLD_DESC: "Générer les liens avec une police grasse.",
  RENDER_LINK_OUTPUT_ITALIC: "Rendre le lien en italique",
  RENDER_LINK_OUTPUT_ITALIC_DESC: "Génerer les liens avec une police italique.",
  LINK_PREFIX: "Prefixe du lien",
  LINK_PREFIX_DESC: "Prefixe pour le lien, ex. '- '.",
  LINK_SUFFIX: "Suffixe du lien",
  LINK_SUFFIX_DESC: "Suffixe pour le lien, ex. '!!!'.",
  PREFIX_HERE: "Prefixe içi",
  SUFFIX_HERE: "Suffixe içi",
  CLEAR_LINK_PREFIX: "Nettoyer le prefixe du lien",
  CLEAR_LINK_SUFFIX: "Nettoyer le suffixe du lien",
  INVALID_INPUT: "Texte biblique d'entré invalide! Avant d'éxecuter la commande vous devez selectionner un texte biblique valide comme: '1 th 1:3-8'.",
  AUTO_OPEN_LINK: "Ouvrir automatiquement le lien géneré",
  AUTO_OPEN_LINK_DESC: "Ouvrir automatiquement le lien géneré dans JW Library."
};
var nl = {
  ABOUT: "Over",
  CREATED_WITH_LOVE: "Gemaakt met \u2764\uFE0F door",
  DOCUMENTATION: "Documentatie",
  CHANGELOG: "Wijzigingslogboek",
  LANGUAGE: "Taal",
  SYSTEM: "Systeem",
  PROCESSING: "Verwerking",
  EXPAND_BIBLE_BOOK_NAME: "Breid Bijbelboek naam uit",
  EXPAND_BIBLE_BOOK_NAME_EXAMPLE: "Bv. 'Ge' => 'Genesis'.",
  AUTO_GET_CURRENT_LINE: "Verkrijg huidige lijn automatisch",
  AUTO_GET_CURRENT_LINE_DESC: "Verkrijg Bijbeltekst automatisch van de huidige lijn waar de cursor zich bevindt als er geen tekst is geselecteerd.",
  STYLING: " Stijl",
  CAPITALIZE_FIRST_CHARACTER: "Vervang het eerste teken van de Bijbelboek link met een hoofdletter",
  CAPITALIZE_FIRST_CHARACTER_DESC: "Vervangt het eerste teken van de link met een hoofdletter.",
  ADD_SPACE_BIBLE_BOOK_NUMBER_NAME: "Voeg spatie toe tussen Bijbelboek nummer en naam",
  ADD_SPACE_BIBLE_BOOK_NUMBER_NAME_DESC: "Voegt een spatie toe tussen het nummer en boek, bv. '1 Joh'.",
  RENDER_LINK_OUTPUT_BOLD: "Geef de linkuitvoer vet weer",
  RENDER_LINK_OUTPUT_BOLD_DESC: "Toont de uitvoerlink met vet lettertype.",
  RENDER_LINK_OUTPUT_ITALIC: "Geef de linkuitvoer schuingedrukt weer",
  RENDER_LINK_OUTPUT_ITALIC_DESC: "Toont de uitvoerlink met schuingedrukt lettertype.",
  LINK_PREFIX: "Link prefix",
  LINK_PREFIX_DESC: "Prefix voor de link, bv. '- '.",
  LINK_SUFFIX: "Link suffix",
  LINK_SUFFIX_DESC: "Suffix voor de link, bv. '!!!'.",
  PREFIX_HERE: "Prefix hier",
  SUFFIX_HERE: "Suffix hier",
  CLEAR_LINK_PREFIX: "Wis link prefix",
  CLEAR_LINK_SUFFIX: "Wis link suffix",
  INVALID_INPUT: "Ongeldige Bijbeltekst! Voordat je dit commando uitvoert moet je een geldige Bijbeltekst selecteren, zoals: '1 th 1:3-8'.",
  AUTO_OPEN_LINK: "Open een gegenereerde link automatisch",
  AUTO_OPEN_LINK_DESC: "Opent de gegenereerde linken automatisch in JW Library."
};
var translations_default = {
  en,
  fr,
  nl
};

// settings.ts
var import_obsidian2 = require("obsidian");
var MainSettingTab = class extends import_obsidian.PluginSettingTab {
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
  }
  getTranslation(key) {
    const langBase = this.getLangBase();
    const attemptTranslating = typeof langBase[key] !== "undefined" ? langBase[key] : void 0;
    if (typeof attemptTranslating !== "undefined") {
      return attemptTranslating;
    }
    return key;
  }
  getLangBase() {
    const pluginLanguage = this.plugin.settings.pluginLanguage;
    const langBase = (pluginLanguage === "en" || pluginLanguage === "fr" || pluginLanguage === "nl") ? translations_exports[pluginLanguage] : {};
    return langBase;
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    new import_obsidian.Setting(containerEl).setName("\u2139\uFE0F " + this.getTranslation("ABOUT")).setHeading();
    containerEl.createEl("p", {
      text: this.getTranslation("CREATED_WITH_LOVE") + " Floydv149"
    });
    containerEl.createEl("a", {
      text: this.getTranslation("DOCUMENTATION"),
      href: "https://github.com/Floydv149/bibleLinkerPro/blob/main/README.md"
    });
    containerEl.createEl("br");
    containerEl.createEl("a", {
      text: this.getTranslation("CHANGELOG"),
      href: "https://github.com/Floydv149/bibleLinkerPro/blob/main/CHANGELOG.MD"
    });
    containerEl.createEl("br");
    containerEl.createEl("br");
    new import_obsidian.Setting(containerEl).setName(this.getTranslation("LANGUAGE")).setDesc("").addDropdown(
      (String) => String.addOption("/", this.getTranslation("SYSTEM")).addOption("en", "English").addOption("fr", "Français").addOption("nl", "Nederlands").setValue(
        this.plugin.settings.pluginLanguage != import_obsidian2.moment.locale() ? this.plugin.settings.pluginLanguage : "/"
      ).onChange(async (value) => {
        if (value === "/") {
          if (import_obsidian2.moment.locale() == "en" || import_obsidian2.moment.locale() == "fr" || import_obsidian2.moment.locale() == "nl") {
            this.plugin.settings.pluginLanguage = import_obsidian2.moment.locale();
          } else {
            this.plugin.settings.pluginLanguage = "en";
          }
        } else {
          this.plugin.settings.pluginLanguage = value;
          await this.plugin.saveSettings();
        }
        this.display();
      })
    );
    new import_obsidian.Setting(containerEl).setName("\u{1F9E0} " + this.getTranslation("PROCESSING")).setHeading();
    new import_obsidian.Setting(containerEl).setName(this.getTranslation("EXPAND_BIBLE_BOOK_NAME")).setDesc(this.getTranslation("EXPAND_BIBLE_BOOK_NAME_EXAMPLE")).addToggle(
      (Boolean) => Boolean.setValue(
        this.plugin.settings.expandBibleBookName
      ).onChange(async (value) => {
        this.plugin.settings.expandBibleBookName = value;
        await this.plugin.saveSettings();
      })
    );
    new import_obsidian.Setting(containerEl).setName(this.getTranslation("AUTO_GET_CURRENT_LINE")).setDesc(this.getTranslation("AUTO_GET_CURRENT_LINE_DESC")).addToggle(
      (Boolean) => Boolean.setValue(this.plugin.settings.autoGetLine).onChange(
        async (value) => {
          this.plugin.settings.autoGetLine = value;
          await this.plugin.saveSettings();
        }
      )
    );
    new import_obsidian.Setting(containerEl).setName(this.getTranslation("AUTO_OPEN_LINK")).setDesc(this.getTranslation("AUTO_OPEN_LINK_DESC")).addToggle(
      (Boolean) => Boolean.setValue(this.plugin.settings.autoOpenLink).onChange(
        async (value) => {
          this.plugin.settings.autoOpenLink = value;
          await this.plugin.saveSettings();
        }
      )
    );
    new import_obsidian.Setting(containerEl).setName("\u{1F58C}\uFE0F " + this.getTranslation("STYLING")).setHeading();
    new import_obsidian.Setting(containerEl).setName(this.getTranslation("CAPITALIZE_FIRST_CHARACTER")).setDesc(this.getTranslation("CAPITALIZE_FIRST_CHARACTER_DESC")).addToggle(
      (Boolean) => Boolean.setValue(
        this.plugin.settings.capitalizeFirstCharBibleBookName
      ).onChange(async (value) => {
        this.plugin.settings.capitalizeFirstCharBibleBookName = value;
        await this.plugin.saveSettings();
      })
    );
    new import_obsidian.Setting(containerEl).setName(this.getTranslation("ADD_SPACE_BIBLE_BOOK_NUMBER_NAME")).setDesc(
      this.getTranslation("ADD_SPACE_BIBLE_BOOK_NUMBER_NAME_DESC")
    ).addToggle(
      (Boolean) => Boolean.setValue(
        this.plugin.settings.addSpaceAfterBibleBookNumber
      ).onChange(async (value) => {
        this.plugin.settings.addSpaceAfterBibleBookNumber = value;
        await this.plugin.saveSettings();
      })
    );
    new import_obsidian.Setting(containerEl).setName(this.getTranslation("RENDER_LINK_OUTPUT_BOLD")).setDesc(this.getTranslation("RENDER_LINK_OUTPUT_BOLD_DESC")).addToggle(
      (Boolean) => Boolean.setValue(this.plugin.settings.makeBold).onChange(
        async (value) => {
          this.plugin.settings.makeBold = value;
          await this.plugin.saveSettings();
        }
      )
    );
    new import_obsidian.Setting(containerEl).setName(this.getTranslation("RENDER_LINK_OUTPUT_ITALIC")).setDesc(this.getTranslation("RENDER_LINK_OUTPUT_ITALIC_DESC")).addToggle(
      (Boolean) => Boolean.setValue(this.plugin.settings.makeItalic).onChange(
        async (value) => {
          this.plugin.settings.makeItalic = value;
          await this.plugin.saveSettings();
        }
      )
    );
    new import_obsidian.Setting(containerEl).setName(this.getTranslation("LINK_PREFIX")).setDesc(this.getTranslation("LINK_PREFIX_DESC")).addText(
      (text) => text.setValue(this.plugin.settings.linkPrefix).onChange(async (value) => {
        this.plugin.settings.linkPrefix = value;
        await this.plugin.saveSettings();
      }).setPlaceholder(this.getTranslation("PREFIX_HERE"))
    ).addExtraButton((b) => {
      b.setIcon("rotate-ccw").setTooltip(this.getTranslation("CLEAR_LINK_PREFIX")).onClick(async () => {
        this.plugin.settings.linkPrefix = "";
        await this.plugin.saveSettings();
        this.display();
      });
    });
    new import_obsidian.Setting(containerEl).setName(this.getTranslation("LINK_SUFFIX")).setDesc(this.getTranslation("LINK_SUFFIX_DESC")).addText(
      (text) => text.setValue(this.plugin.settings.linkSuffix).onChange(async (value) => {
        this.plugin.settings.linkSuffix = value;
        await this.plugin.saveSettings();
      }).setPlaceholder(this.getTranslation("SUFFIX_HERE"))
    ).addExtraButton((b) => {
      b.setIcon("rotate-ccw").setTooltip(this.getTranslation("CLEAR_LINK_SUFFIX")).onClick(async () => {
        this.plugin.settings.linkSuffix = "";
        await this.plugin.saveSettings();
        this.display();
      });
    });
  }
};

// main.ts
var import_obsidian3 = require("obsidian");
var import_obsidian4 = require("obsidian");
var DEFAULT_SETTINGS = {
  pluginLanguage: "?",
  expandBibleBookName: true,
  capitalizeFirstCharBibleBookName: true,
  addSpaceAfterBibleBookNumber: true,
  autoGetLine: false,
  autoOpenLink: false,
  makeBold: false,
  makeItalic: false,
  linkPrefix: "",
  linkSuffix: "",
  lastVersion: ""
};
var BibleLinkerPro = class extends import_obsidian4.Plugin {
  constructor() {
    super(...arguments);
    //Set current plugin version
    this.currentPluginVersion = this.manifest.version;
  }
  getTranslation(key) {
    const langBase = this.getLangBase();
    const attemptTranslating = typeof langBase[key] !== "undefined" ? langBase[key] : void 0;
    if (typeof attemptTranslating !== "undefined") {
      return attemptTranslating;
    }
    return key;
  }
  getLangBase() {
    const pluginLanguage = this.settings.pluginLanguage;
    const langBase = (pluginLanguage === "en" || pluginLanguage === "fr" || pluginLanguage === "nl") ? translations_exports[pluginLanguage] : {};
    return langBase;
  }
  async onload() {
    await this.loadSettings();
    console.log("Bible linker Pro V." + this.currentPluginVersion);
    if (this.settings.pluginLanguage == "?") {
      if (import_obsidian3.moment.locale() == "en" || import_obsidian3.moment.locale() == "fr" || import_obsidian3.moment.locale() == "nl") {
        this.settings.pluginLanguage = import_obsidian3.moment.locale();
      } else {
        this.settings.pluginLanguage = "en";
      }
    }
    await this.saveSettings();
    const errorModal = new ErrorModal(this.app);
    this.registerEvent(
      this.app.workspace.on(
        "editor-menu",
        (menu, editor, view) => {
          menu.addItem((item) => {
            item.setTitle("Convert Bible text to JW Library link").setIcon("link").onClick(async () => {
              convertBibleTextToJWLibraryLink(editor, view);
            });
          });
        }
      )
    );
    const convertBibleTextToJWLibraryLink = (editor, view) => {
      let input;
      try {
        if (this.settings.autoGetLine) {
          if (editor.getSelection().length > 0) {
            input = editor.getSelection();
          } else {
            input = editor.getLine(editor.getCursor().line);
            editor.setLine(editor.getCursor().line, "");
          }
        } else {
          input = editor.getSelection();
        }
        input = input.trim();
        const bibleBooksEN = [
          ["ge", "gen", "genesis"],
          ["ex", "exodus"],
          ["le", "lev", "leviticus"],
          ["nu", "num", "numbers"],
          ["de", "deut", "deuteronomy"],
          ["jos", "josh", "joshua"],
          ["jg", "judg", "judges"],
          ["ru", "ruth"],
          ["1sa", "1sam", "1samuel"],
          ["2sa", "2sam", "2samuel"],
          ["1ki", "1kings"],
          ["2ki", "2kings"],
          ["1ch", "1chron", "1chronicles"],
          ["2ch", "2chron", "2chronicles"],
          ["ezr", "ezra"],
          ["ne", "neh", "nehemiah"],
          ["es", "esther"],
          ["job", "job"],
          ["ps", "psalms", "psalm"],
          ["pr", "prov", "proverbs"],
          ["ec", "eccl", "ecclesiastes"],
          ["ca", "song of sol", "song of solomon"],
          ["isa", "isa", "isaiah"],
          ["jer", "jer", "jeremiah"],
          ["la", "lam", "lamentations"],
          ["eze", "ezek", "ezekiel"],
          ["da", "dan", "dani\xEBl"],
          ["ho", "hos", "hosea"],
          ["joe", "joel"],
          ["am", "amos"],
          ["ob", "obad", "obadiah"],
          ["jon", "jonah"],
          ["mic", "mic", "micah"],
          ["na", "nah", "nahum"],
          ["hab", "habakkuk"],
          ["zep", "zeph", "zephaniah"],
          ["hag", "hagga\xEF"],
          ["zec", "zech", "zechariah"],
          ["mal", "malachi"],
          ["mt", "matt", "matthew"],
          ["mr", "mark", "mark"],
          ["lu", "luke"],
          ["joh", "john"],
          ["ac", "acts"],
          ["ro", "rom", "romans"],
          ["1co", "1cor", "1corinthians"],
          ["2co", "2cor", "2corinthians"],
          ["ga", "gal", "galatians"],
          ["eph", "ephesians"],
          ["php", "phil", "philippians"],
          ["col", "kolossenzen", "colossians"],
          ["1th", "1thess", "1thessalonians"],
          ["2th", "2thess", "2thessalonians"],
          ["1ti", "1tim", "1timothy"],
          ["2ti", "2tim", "2timothy"],
          ["tit", "titus"],
          ["phm", "philem", "philemon"],
          ["heb", "hebr", "hebrews"],
          ["jas", "james"],
          ["1pe", "1pet", "1peter"],
          ["2pe", "2pet", "2peter"],
          ["1jo", "1john"],
          ["2jo", "2john"],
          ["3jo", "3john"],
          ["jude", "jude"],
          ["re", "rev", "revelation"]
        ];
        const bibleBooksFR = [
          ["ge", "gen", "genèse"],
          ["ex", "exode"],
          ["lv", "lev", "lévitique"],
          ["nb", "nomb", "nombres"],
          ["dt", "deut", "deuteronome"],
          ["jos", "jos", "josué"],
          ["jg", "juges"],
          ["ru", "ruth"],
          ["1s", "1sam", "1samuel"],
          ["2s", "2sam", "2samuel"],
          ["1r", "1rois"],
          ["2r", "2rois"],
          ["1ch", "1chron", "1chroniques"],
          ["2ch", "2chron", "2chroniques"],
          ["esd", "esdras"],
          ["ne", "neh", "néhémie"],
          ["est", "esther"],
          ["jb", "job"],
          ["ps", "psaumes"],
          ["pr", "prov", "proverbes"],
          ["ec", "eccl", "ecclésiaste"],
          ["ct", "chant de S", "Chant de Salomon"],
          ["is", "isïe"],
          ["jr", "jer", "jérémie"],
          ["la", "lam", "lamentations"],
          ["ez", "ezech", "ézechiel"],
          ["da", "dan", "daniel"],
          ["os", "osée"],
          ["jl", "joël"],
          ["am", "amos"],
          ["ab", "abd", "abdias"],
          ["jon", "jonas"],
          ["mi", "mich", "michée"],
          ["na", "nah", "nahum"],
          ["hab", "habacuc"],
          ["sph", "soph", "sophonie"],
          ["ag", "agg","aggée"],
          ["za", "zach", "zacharie"],
          ["ml", "mal", "malachie"],
          ["mt", "mat", "matthieu"],
          ["mc", "marc"],
          ["lc", "luc"],
          ["jean", "jean"],
          ["ac", "actes"],
          ["rm", "rom", "romains"],
          ["1co", "1cor", "1corinthiens"],
          ["2co", "2cor", "2corinthiens"],
          ["ga", "gal", "galate"],
          ["eph", "éphesiens"],
          ["php", "phil", "philippiens"],
          ["col", "colossiens"],
          ["1th", "1thess", "1thessaloniciens"],
          ["2th", "2thess", "2thessaloniciens"],
          ["1tm", "1tim", "1timothée"],
          ["2tm", "2tim", "2timothée"],
          ["tt", "tite"],
          ["phm", "philem", "philemon"],
          ["he", "heb", "hébreux"],
          ["jc", "jacq", "jacques"],
          ["1p", "1pierre"],
          ["2p", "2pierre"],
          ["1j", "1jean"],
          ["2j", "2jean"],
          ["3j", "3jean"],
          ["jude", "jude"],
          ["re", "rev", "révélation"]
        ];
        const bibleBooksNL = [
          ["ge", "gen", "genesis"],
          ["ex", "exodus"],
          ["le", "lev", "leviticus"],
          ["nu", "num", "numeri"],
          ["de", "deut", "deuteronomium"],
          ["joz", "jozua"],
          ["re", "recht", "rechters"],
          ["ru", "ruth"],
          ["1sa", "1sam", "1samu\xEBl"],
          ["2sa", "2sam", "2samu\xEBl"],
          ["1kon", "1koningen"],
          ["2kon", "2koningen"],
          ["1kr", "1kronieken"],
          ["2kr", "2kronieken"],
          ["ezr", "ezra"],
          ["ne", "nehemiah"],
          ["es", "esther"],
          ["job", "job"],
          ["ps", "psalmen", "psalm"],
          ["sp", "spreuken"],
          ["pr", "pred", "prediker"],
          ["hgl", "hooglied"],
          ["jes", "jesaja"],
          ["jer", "jeremia"],
          ["klg", "klaagl", "klaagliederen"],
          ["ez", "ezech", "ezechi\xEBl"],
          ["da", "dan", "dani\xEBl"],
          ["ho", "hos", "hosea"],
          ["jo\xEB", "jo\xEBl"],
          ["am", "amos"],
          ["ob", "obad", "obadja"],
          ["jon", "jona"],
          ["mi", "micha"],
          ["na", "nah", "nahum"],
          ["hab", "habakuk"],
          ["ze", "zef", "zefanja"],
          ["hag", "hagga\xEF"],
          ["za", "zach", "zacharia"],
          ["mal", "maleachi"],
          ["mt", "matth", "matthe\xFCs"],
          ["mr", "mark", "markus"],
          ["lu", "luk", "lukas"],
          ["jo", "joh", "johannes"],
          ["han", "hand", "handelingen"],
          ["ro", "rom", "romeinen"],
          ["1kor", "1korinthi\xEBrs"],
          ["2kor", "2korinthi\xEBrs"],
          ["ga", "gal", "galaten"],
          ["ef", "efezi\xEBrs"],
          ["fil", "filippenzen"],
          ["kol", "kolossenzen"],
          ["1th", "1thess", "1thessalonicenzen"],
          ["2th", "2thess", "2thessalonicenzen"],
          ["1ti", "1tim", "1timothe\xFCs"],
          ["2ti", "2tim", "2timothe\xFCs"],
          ["tit", "titus"],
          ["flm", "filem", "filemon"],
          ["heb", "hebr", "hebree\xEBn"],
          ["jak", "jakobus"],
          ["1pe", "1petr", "1petrus"],
          ["2pe", "2petr", "2petrus"],
          ["1jo", "1joh", "1johannes"],
          ["2jo", "2joh", "2johannes"],
          ["3jo", "3joh", "3johannes"],
          ["ju", "jud", "judas"],
          ["opb", "openb", "openbaring"]
        ];
        let bibleBooks = bibleBooksEN;
        if (this.settings.pluginLanguage == "nl") {
          bibleBooks = bibleBooksNL;
        }if (this.settings.pluginLanguage == "fr") {
          bibleBooks = bibleBooksFR;
        }
        let linkOutput = "";
        let context = "";
        let bibleBookLong;
        let bibleBookHasNumber = false;
        if ([1, 2, 3].includes(parseInt(input.substring(0, 1)))) {
          if (input.substring(1, 2) == " ") {
            input = input.substring(0, 1) + input.substring(2);
          }
          bibleBookHasNumber = true;
        }
        const bibleBookQuery = input.split(" ")[0].toLowerCase();
        for (let i = 0; i < bibleBooks.length; i++) {
          if (bibleBooks[i].includes(bibleBookQuery)) {
            if (i.toString().length == 1) {
              linkOutput += "0" + (i + 1);
            } else {
              linkOutput += i + 1;
            }
            bibleBookLong = bibleBooks[i][bibleBooks[i].length - 1];
            i = bibleBooks.length;
          }
        }
        let chapter = input.split(" ")[1];
        chapter = chapter.split(":")[0];
        if (chapter.length == 1) {
          linkOutput += "00" + chapter;
        } else if (chapter.length == 2) {
          linkOutput += "0" + chapter;
        } else {
          linkOutput += chapter;
        }
        context += linkOutput;
        let verse = input.split(" ")[1];
        verse = verse.split(":")[1];
        if (verse.includes("-")) {
          verse = verse.split("-")[0];
        } else if (input.includes(",")) {
          verse = verse.split(",")[0];
        }
        if (verse.length == 1) {
          linkOutput += "00" + verse;
        } else if (verse.length == 2) {
          linkOutput += "0" + verse;
        } else {
          linkOutput += verse;
        }
        let verseContinue = "";
        if (input.includes("-")) {
          verseContinue = input.split("-")[1];
        } else if (input.includes(",")) {
          verseContinue = input.split(",")[1];
          if (verseContinue.substring(0, 1) == " ") {
            verseContinue = verseContinue.substring(1);
          }
        }
        if (verseContinue != void 0 && verseContinue != "") {
          linkOutput += "-" + context;
          if (verseContinue.length == 1) {
            linkOutput += "00" + verseContinue;
          } else if (verseContinue.length == 2) {
            linkOutput += "0" + verseContinue;
          } else {
            linkOutput += verseContinue;
          }
        }
        let renderOutput;
        if (this.settings.expandBibleBookName) {
          if (this.settings.addSpaceAfterBibleBookNumber && bibleBookHasNumber) {
            renderOutput = (bibleBookLong == null ? void 0 : bibleBookLong.substring(0, 1)) + " " + (bibleBookLong == null ? void 0 : bibleBookLong.slice(1)) + " " + input.split(" ")[1];
            if (input.split(" ")[2]) {
              renderOutput += " " + input.split(" ")[2];
            }
          } else {
            renderOutput = bibleBookLong + " " + input.split(" ")[1];
            if (input.split(" ")[2]) {
              renderOutput += " " + input.split(" ")[2];
            }
          }
        } else {
          if (this.settings.addSpaceAfterBibleBookNumber && bibleBookHasNumber) {
            renderOutput = input.substring(0, 1) + " " + input.slice(1);
          } else {
            renderOutput = input;
          }
        }
        if (this.settings.capitalizeFirstCharBibleBookName) {
          if (bibleBookHasNumber) {
            if (this.settings.addSpaceAfterBibleBookNumber) {
              renderOutput = renderOutput.substring(0, 2) + renderOutput.charAt(2).toUpperCase() + renderOutput.slice(3);
            } else {
              renderOutput = renderOutput.substring(0, 1) + renderOutput.charAt(1).toUpperCase() + renderOutput.slice(2);
            }
          } else {
            renderOutput = renderOutput.charAt(0).toUpperCase() + renderOutput.slice(1);
          }
        }
        if (this.settings.makeBold) {
          renderOutput = "**" + renderOutput + "**";
        }
        if (this.settings.makeItalic) {
          renderOutput = "*" + renderOutput + "*";
        }
        renderOutput = this.settings.linkPrefix + renderOutput + this.settings.linkSuffix;
        editor.replaceSelection(
          "[" + renderOutput + "](jwlibrary:///finder?bible=" + linkOutput + ")"
        );
        if (this.settings.autoOpenLink) {
          window.open("jwlibrary:///finder?bible=" + linkOutput);
        }
      } catch (error) {
        if (input != null) {
          editor.replaceSelection(input);
        }
        errorModal.setText(this.getTranslation("INVALID_INPUT"));
        errorModal.open();
      }
    };
    this.addCommand({
      id: "convert-Bible-text-to-JW-Library-link",
      name: "Convert Bible text to JW Library link",
      editorCallback: (editor, view) => {
        convertBibleTextToJWLibraryLink(editor, view);
      }
    });
    this.addSettingTab(new MainSettingTab(this.app, this));
    if (this.currentPluginVersion != this.settings.lastVersion) {
      this.settings.lastVersion = this.currentPluginVersion;
      this.saveSettings();
      new UpdateNotesModal(this.app).open();
    }
  }
  onunload() {
  }
  // async activateView() {
  // 	const { workspace } = this.app;
  // 	let leaf: WorkspaceLeaf | null = null;
  // 	const leaves = workspace.getLeavesOfType(VIEW_TYPE_EXAMPLE);
  // 	if (leaves.length > 0) {
  // 		// A leaf with our view already exists, use that
  // 		leaf = leaves[0];
  // 	} else {
  // 		// Our view could not be found in the workspace, create a new leaf
  // 		// in the right sidebar for it
  // 		leaf = workspace.getRightLeaf(false);
  // 		await leaf.setViewState({ type: VIEW_TYPE_EXAMPLE, active: true });
  // 	}
  // 	workspace.revealLeaf(leaf);
  // }
  async loadSettings() {
    this.settings = Object.assign(
      {},
      DEFAULT_SETTINGS,
      await this.loadData()
    );
  }
  async saveSettings() {
    await this.saveData(this.settings);
  }
};
var ErrorModal = class extends import_obsidian4.Modal {
  constructor(app) {
    super(app);
  }
  setText(text) {
    const { contentEl } = this;
    contentEl.createEl("p", {
      text
    });
  }
  onOpen() {
  }
  onClose() {
    const { contentEl } = this;
    contentEl.empty();
  }
};
var UpdateNotesModal = class extends import_obsidian4.Modal {
  constructor(app) {
    super(app);
  }
  onOpen() {
    const { contentEl } = this;
    contentEl.createEl("h2", {
      text: "New update to Bible linker Pro"
    });
    contentEl.createEl("h3", { text: "What's new?" });
    contentEl.createEl("p", {
      text: "-   Fixed a bug that converted 'Psalms' to 'Psalms'."
    });
    const dismisButton = contentEl.createEl("button", {
      text: "Dismiss"
    });
    dismisButton.addEventListener("click", () => {
      this.close();
    });
  }
  onClose() {
    const { contentEl } = this;
    contentEl.empty();
  }
};
